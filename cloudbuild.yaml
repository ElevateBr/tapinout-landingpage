steps:
  # Build da imagem Docker com tag única usando o ambiente e BUILD_ID
  - name: 'gcr.io/cloud-builders/docker'
    args: 
      - 'build'
      - '-t'
      - 'gcr.io/$PROJECT_ID/tapinout-landing-$_ENVIRONMENT:$BUILD_ID'
      - '--build-arg'
      - 'NODE_OPTIONS=--max-old-space-size=4096'
      - '--build-arg'
      - 'ENVIRONMENT=$_ENVIRONMENT'
      - '--memory'
      - '8g'
      - '--memory-swap'
      - '8g'
      - '.'
    env:
      - 'NODE_OPTIONS=--max-old-space-size=8192'
      - 'NODE_ENV=production'
      - 'ENVIRONMENT=$_ENVIRONMENT'

  # Tag da imagem como 'latest'
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'tag',
      'gcr.io/$PROJECT_ID/tapinout-landing-$_ENVIRONMENT:$BUILD_ID',
      'gcr.io/$PROJECT_ID/tapinout-landing-$_ENVIRONMENT:latest'
    ]

  # Push das duas tags
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/tapinout-landing-$_ENVIRONMENT:$BUILD_ID']

  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/tapinout-landing-$_ENVIRONMENT:latest']

  # Deploy no Cloud Run usando a tag única
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args: [
      'run', 'deploy', 'tapinout-landing-$_ENVIRONMENT',
      '--image', 'gcr.io/$PROJECT_ID/tapinout-landing-$_ENVIRONMENT:$BUILD_ID',
      '--region', 'us-central1',
      '--allow-unauthenticated',
      '--platform', 'managed'
    ]

images:
  - 'gcr.io/$PROJECT_ID/tapinout-landing-$_ENVIRONMENT:$BUILD_ID'
  - 'gcr.io/$PROJECT_ID/tapinout-landing-$_ENVIRONMENT:latest'

options:
  env:
    - 'NODE_OPTIONS=--max-old-space-size=4096'
    - 'NODE_ENV=production'
    - 'ENVIRONMENT=$_ENVIRONMENT'
  logging: 'CLOUD_LOGGING_ONLY'
